{"ast":null,"code":"import _objectSpread from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Channel.js\";\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport channelService from '../../service/channelService';\nimport Chat from './Container/Chat/Chat';\n\nconst Channel = ({\n  channel,\n  users,\n  name,\n  messages,\n  emitSendMessage,\n  emitDeleteMessage\n}) => {\n  const _useState = useState({\n    ready: false,\n    link: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        invite = _useState2[0],\n        setInvite = _useState2[1];\n\n  const createInvite = e => {\n    e.preventDefault();\n    channelService.getInvite(channel).then(link => setInvite({\n      ready: true,\n      link\n    }));\n  };\n\n  const resetLink = () => setInvite(prev => _objectSpread({}, prev, {\n    ready: false\n  }));\n\n  console.log(invite.link);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, name, invite.ready ? React.createElement(CopyToClipboard, {\n    text: invite.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: resetLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Copy to clipboard\")) : React.createElement(\"button\", {\n    type: \"button\",\n    onClick: createInvite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Create Invite Link\"), React.createElement(Chat, {\n    messages: messages,\n    emitSendMessage: emitSendMessage,\n    emitDeleteMessage: emitDeleteMessage,\n    channel: channel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default Channel;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Channel.js"],"names":["React","useState","CopyToClipboard","channelService","Chat","Channel","channel","users","name","messages","emitSendMessage","emitDeleteMessage","ready","link","invite","setInvite","createInvite","e","preventDefault","getInvite","then","resetLink","prev","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,OADe;AACNC,EAAAA,KADM;AACCC,EAAAA,IADD;AACOC,EAAAA,QADP;AACiBC,EAAAA,eADjB;AACkCC,EAAAA;AADlC,CAAD,KAEV;AAAA,oBACwBV,QAAQ,CAAC;AACnCW,IAAAA,KAAK,EAAE,KAD4B;AAEnCC,IAAAA,IAAI,EAAE;AAF6B,GAAD,CADhC;AAAA;AAAA,QACGC,MADH;AAAA,QACWC,SADX;;AAKJ,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,cAAc,CACXgB,SADH,CACab,OADb,EAEGc,IAFH,CAESP,IAAD,IAAUE,SAAS,CAAC;AACxBH,MAAAA,KAAK,EAAE,IADiB;AAExBC,MAAAA;AAFwB,KAAD,CAF3B;AAMD,GARD;;AAUA,QAAMQ,SAAS,GAAG,MAAMN,SAAS,CAAEO,IAAD,sBAAgBA,IAAhB;AAAsBV,IAAAA,KAAK,EAAE;AAA7B,IAAD,CAAjC;;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACD,IAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IADH,EAEIM,MAAM,CAACF,KAAP,GACA,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEE,MAAM,CAACD,IADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEQ,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,CADA,GAME;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEL,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARN,EASE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAEP,QADZ;AAEE,IAAA,eAAe,EAAEC,eAFnB;AAGE,IAAA,iBAAiB,EAAEC,iBAHrB;AAIE,IAAA,OAAO,EAAEL,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAkBD,CArCD;;AAuCA,eAAeD,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport channelService from '../../service/channelService';\nimport Chat from './Container/Chat/Chat';\n\nconst Channel = ({\n  channel, users, name, messages, emitSendMessage, emitDeleteMessage,\n}) => {\n  const [invite, setInvite] = useState({\n    ready: false,\n    link: '',\n  });\n  const createInvite = (e) => {\n    e.preventDefault();\n    channelService\n      .getInvite(channel)\n      .then((link) => setInvite({\n        ready: true,\n        link,\n      }));\n  };\n\n  const resetLink = () => setInvite((prev) => ({ ...prev, ready: false }));\n  console.log(invite.link);\n  return (\n    <div>\n      {name}\n      { invite.ready ? (\n        <CopyToClipboard\n          text={invite.link}\n        >\n          <button type=\"button\" onClick={resetLink}>Copy to clipboard</button>\n        </CopyToClipboard>\n      ) : <button type=\"button\" onClick={createInvite}>Create Invite Link</button>}\n      <Chat\n        messages={messages}\n        emitSendMessage={emitSendMessage}\n        emitDeleteMessage={emitDeleteMessage}\n        channel={channel}\n      />\n    </div>\n  );\n};\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}