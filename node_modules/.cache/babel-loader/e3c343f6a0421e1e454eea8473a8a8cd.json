{"ast":null,"code":"import _objectSpread from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Channel.js\";\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport channelService from '../../service/channelService';\nimport Chat from './Container/Chat/Chat';\n\nconst Channel = ({\n  channel,\n  users,\n  name,\n  messages,\n  emitSendMessage,\n  emitDeleteMessage\n}) => {\n  const _useState = useState({\n    ready: false,\n    link: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        invite = _useState2[0],\n        setInvite = _useState2[1];\n\n  const createInvite = () => {\n    channelService.getInvite(channel).then(({\n      channelID\n    }) => setInvite({\n      ready: true,\n      link: channelID\n    }));\n  };\n\n  const resetLink = () => setInvite(prev => _objectSpread({}, prev, {\n    ready: false\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, name, invite.ready ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, invite.link), React.createElement(CopyToClipboard, {\n    text: invite.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Copy to clipboard!\"))) : React.createElement(\"button\", {\n    type: \"button\",\n    onClick: createInvite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Create Invite Link\"), React.createElement(Chat, {\n    messages: messages,\n    emitSendMessage: emitSendMessage,\n    emitDeleteMessage: emitDeleteMessage,\n    channel: channel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default Channel;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Channel.js"],"names":["React","useState","CopyToClipboard","channelService","Chat","Channel","channel","users","name","messages","emitSendMessage","emitDeleteMessage","ready","link","invite","setInvite","createInvite","getInvite","then","channelID","resetLink","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,OADe;AACNC,EAAAA,KADM;AACCC,EAAAA,IADD;AACOC,EAAAA,QADP;AACiBC,EAAAA,eADjB;AACkCC,EAAAA;AADlC,CAAD,KAEV;AAAA,oBACwBV,QAAQ,CAAC;AACnCW,IAAAA,KAAK,EAAE,KAD4B;AAEnCC,IAAAA,IAAI,EAAE;AAF6B,GAAD,CADhC;AAAA;AAAA,QACGC,MADH;AAAA,QACWC,SADX;;AAKJ,QAAMC,YAAY,GAAG,MAAM;AACzBb,IAAAA,cAAc,CACXc,SADH,CACaX,OADb,EAEGY,IAFH,CAEQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAmBJ,SAAS,CAAC;AACjCH,MAAAA,KAAK,EAAE,IAD0B;AAEjCC,MAAAA,IAAI,EAAEM;AAF2B,KAAD,CAFpC;AAMD,GAPD;;AASA,QAAMC,SAAS,GAAG,MAAML,SAAS,CAAEM,IAAD,sBAAgBA,IAAhB;AAAsBT,IAAAA,KAAK,EAAE;AAA7B,IAAD,CAAjC;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IADH,EAKIM,MAAM,CAACF,KAAP,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWE,MAAM,CAACD,IAAlB,CADF,EAEE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEC,MAAM,CAACD,IADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CAFF,CADA,GAWE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEG,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhBN,EAiBE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAEP,QADZ;AAEE,IAAA,eAAe,EAAEC,eAFnB;AAGE,IAAA,iBAAiB,EAAEC,iBAHrB;AAIE,IAAA,OAAO,EAAEL,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AA0BD,CA5CD;;AA8CA,eAAeD,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport channelService from '../../service/channelService';\nimport Chat from './Container/Chat/Chat';\n\nconst Channel = ({\n  channel, users, name, messages, emitSendMessage, emitDeleteMessage,\n}) => {\n  const [invite, setInvite] = useState({\n    ready: false,\n    link: '',\n  });\n  const createInvite = () => {\n    channelService\n      .getInvite(channel)\n      .then(({ channelID }) => setInvite({\n        ready: true,\n        link: channelID,\n      }));\n  };\n\n  const resetLink = () => setInvite((prev) => ({ ...prev, ready: false }));\n\n  return (\n    <div>\n      {name}\n      {\n        // modal this!\n      }\n      { invite.ready ? (\n        <div>\n          <textarea>{invite.link}</textarea>\n          <CopyToClipboard\n            text={invite.link}\n          >\n            <button type=\"button\">\n              Copy to clipboard!\n            </button>\n          </CopyToClipboard>\n        </div>\n      ) : <button type=\"button\" onClick={createInvite}>Create Invite Link</button>}\n      <Chat\n        messages={messages}\n        emitSendMessage={emitSendMessage}\n        emitDeleteMessage={emitDeleteMessage}\n        channel={channel}\n      />\n    </div>\n  );\n};\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}