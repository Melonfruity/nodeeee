{"ast":null,"code":"var _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Chat.js\";\nimport React, { useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Chatbox from './Chatbox';\nlet socket;\n\nconst Chat = ({\n  channel\n}) => {\n  console.log(channel); // define emit message event\n\n  const sendMessage = message => {\n    console.log(message);\n  };\n\n  useEffect(() => {\n    // do it in initial render cause then it will connect before that...\n    socket = io('http://localhost:8001/channel'); // join that channel (room)\n\n    socket.on('connect', () => {\n      // from servers\n      socket.on('server message', data => {\n        console.log(data);\n      });\n      socket.emit('message', 'client connected', () => {\n        console.log('sent message to server');\n      });\n    });\n    return () => {\n      socket.off();\n    };\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Chatbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Chat.js"],"names":["React","useEffect","io","Chatbox","socket","Chat","channel","console","log","sendMessage","message","on","data","emit","off"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAF4B,CAI5B;;AACA,QAAMG,WAAW,GAAIC,OAAD,IAAa;AAC/BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACD,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACAG,IAAAA,MAAM,GAAGF,EAAE,CAAC,+BAAD,CAAX,CAFc,CAGd;;AAEAE,IAAAA,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzB;AACAP,MAAAA,MAAM,CAACO,EAAP,CAAU,gBAAV,EAA6BC,IAAD,IAAU;AACpCL,QAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACD,OAFD;AAIAR,MAAAA,MAAM,CAACS,IAAP,CAAY,SAAZ,EAAuB,kBAAvB,EAA2C,MAAM;AAC/CN,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,OAFD;AAGD,KATD;AAWA,WAAO,MAAM;AACXJ,MAAAA,MAAM,CAACU,GAAP;AACD,KAFD;AAGD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,SACE,0CACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAnCD;;AAqCA,eAAeT,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Chatbox from './Chatbox';\n\nlet socket;\n\nconst Chat = ({ channel }) => {\n\n  console.log(channel);\n\n  // define emit message event\n  const sendMessage = (message) => {\n    console.log(message);\n  };\n\n  useEffect(() => {\n    // do it in initial render cause then it will connect before that...\n    socket = io('http://localhost:8001/channel');\n    // join that channel (room)\n\n    socket.on('connect', () => {\n      // from servers\n      socket.on('server message', (data) => {\n        console.log(data);\n      });\n\n      socket.emit('message', 'client connected', () => {\n        console.log('sent message to server');\n      });\n    });\n\n    return () => {\n      socket.off();\n    };\n  }, []);\n\n  return (\n    <>\n      <Chatbox />\n    </>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}