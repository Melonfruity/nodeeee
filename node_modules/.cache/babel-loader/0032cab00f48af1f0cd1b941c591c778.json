{"ast":null,"code":"import _slicedToArray from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useField } from '../../../../hooks/useField';\nimport TextContainer from './TextContainer';\nimport Input from './Input';\nimport './Chat.css';\n\nconst Chat = ({\n  channelID,\n  initialMessages,\n  socket\n}) => {\n  // define emit message event\n  const message = useField('text');\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1];\n\n  const sendMessage = e => {\n    e.preventDefault();\n    const messageObj = {\n      message: message.value,\n      channelID,\n      authorization: window.localStorage.getItem('authorization'),\n      username: window.localStorage.getItem('username')\n    };\n    socket.emit('message', messageObj, data => {\n      setMessages([...messages, data]);\n    });\n  };\n\n  useEffect(() => {\n    socket.on(`new message ${channelID}`, messageObj => {\n      console.log(messageObj, channelID);\n      setMessages([...messages, messageObj]);\n    });\n    return () => {\n      socket.off();\n    };\n  }, [channelID, messages, socket]);\n  useEffect(() => {\n    setMessages(prev => prev.concat(initialMessages));\n  }, [initialMessages]);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TextContainer, {\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Chat.js"],"names":["React","useEffect","useState","useField","TextContainer","Input","Chat","channelID","initialMessages","socket","message","messages","setMessages","sendMessage","e","preventDefault","messageObj","value","authorization","window","localStorage","getItem","username","emit","data","on","console","log","off","prev","concat"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,eAAb;AAA8BC,EAAAA;AAA9B,CAAD,KAA4C;AACvD;AACA,QAAMC,OAAO,GAAGP,QAAQ,CAAC,MAAD,CAAxB;;AAFuD,oBAGvBD,QAAQ,CAAC,EAAD,CAHe;AAAA;AAAA,QAGhDS,QAHgD;AAAA,QAGtCC,WAHsC;;AAKvD,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,UAAU,GAAG;AACjBN,MAAAA,OAAO,EAAEA,OAAO,CAACO,KADA;AAEjBV,MAAAA,SAFiB;AAGjBW,MAAAA,aAAa,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,eAA5B,CAHE;AAIjBC,MAAAA,QAAQ,EAAEH,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B;AAJO,KAAnB;AAMAZ,IAAAA,MAAM,CAACc,IAAP,CAAY,SAAZ,EAAuBP,UAAvB,EAAoCQ,IAAD,IAAU;AAC3CZ,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAca,IAAd,CAAD,CAAX;AACD,KAFD;AAGD,GAXD;;AAaAvB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACgB,EAAP,CAAW,eAAclB,SAAU,EAAnC,EAAuCS,UAAD,IAAgB;AACpDU,MAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ,EAAwBT,SAAxB;AACAK,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcK,UAAd,CAAD,CAAX;AACD,KAHD;AAKA,WAAO,MAAM;AACXP,MAAAA,MAAM,CAACmB,GAAP;AACD,KAFD;AAGD,GATQ,EASN,CAACrB,SAAD,EAAYI,QAAZ,EAAsBF,MAAtB,CATM,CAAT;AAWAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAAEiB,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAYtB,eAAZ,CAAX,CAAX;AACD,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEG,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,WAAW,EAAEG,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AASD,CA1CD;;AA4CA,eAAeP,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useField } from '../../../../hooks/useField';\nimport TextContainer from './TextContainer';\nimport Input from './Input';\n\nimport './Chat.css';\n\nconst Chat = ({ channelID, initialMessages, socket }) => {\n  // define emit message event\n  const message = useField('text');\n  const [messages, setMessages] = useState([]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    const messageObj = {\n      message: message.value,\n      channelID,\n      authorization: window.localStorage.getItem('authorization'),\n      username: window.localStorage.getItem('username'),\n    };\n    socket.emit('message', messageObj, (data) => {\n      setMessages([...messages, data]);\n    });\n  };\n\n  useEffect(() => {\n    socket.on(`new message ${channelID}`, (messageObj) => {\n      console.log(messageObj, channelID);\n      setMessages([...messages, messageObj]);\n    });\n\n    return () => {\n      socket.off();\n    };\n  }, [channelID, messages, socket]);\n\n  useEffect(() => {\n    setMessages((prev) => prev.concat(initialMessages));\n  }, [initialMessages]);\n\n  return (\n    <div className=\"container\">\n      <TextContainer messages={messages} />\n      <Input\n        message={message}\n        sendMessage={sendMessage}\n      />\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}