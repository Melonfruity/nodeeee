{"ast":null,"code":"var _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useField } from '../../../../hooks/useField';\nimport TextContainer from './TextContainer';\nimport Input from './Input';\nimport './Chat.css';\n\nconst Chat = ({\n  channelID,\n  socket,\n  messages,\n  setMessages\n}) => {\n  // define emit message event\n  const message = useField('text');\n  console.log(messages);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    const messageObj = {\n      message: message.value,\n      channelID,\n      authorization: window.localStorage.getItem('authorization'),\n      username: window.localStorage.getItem('username')\n    };\n    socket.emit('message', messageObj, data => {\n      setMessages([...messages, data]);\n    });\n  };\n\n  socket.on('new message', messageObj => {\n    console.log(messageObj, channelID);\n    setMessages([...messages, messageObj]);\n  });\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(TextContainer, {\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Chat.js"],"names":["React","useEffect","useState","useField","TextContainer","Input","Chat","channelID","socket","messages","setMessages","message","console","log","sendMessage","e","preventDefault","messageObj","value","authorization","window","localStorage","getItem","username","emit","data","on"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA;AAA/B,CAAD,KAAkD;AAC7D;AACA,QAAMC,OAAO,GAAGR,QAAQ,CAAC,MAAD,CAAxB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,QAAMK,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,UAAU,GAAG;AACjBN,MAAAA,OAAO,EAAEA,OAAO,CAACO,KADA;AAEjBX,MAAAA,SAFiB;AAGjBY,MAAAA,aAAa,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,eAA5B,CAHE;AAIjBC,MAAAA,QAAQ,EAAEH,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B;AAJO,KAAnB;AAMAd,IAAAA,MAAM,CAACgB,IAAP,CAAY,SAAZ,EAAuBP,UAAvB,EAAoCQ,IAAD,IAAU;AAC3Cf,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcgB,IAAd,CAAD,CAAX;AACD,KAFD;AAGD,GAXD;;AAaAjB,EAAAA,MAAM,CAACkB,EAAP,CAAU,aAAV,EAA0BT,UAAD,IAAgB;AACvCL,IAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ,EAAwBV,SAAxB;AACAG,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcQ,UAAd,CAAD,CAAX;AACD,GAHD;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAER,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEE,OADX;AAEE,IAAA,WAAW,EAAEG,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AASD,CA/BD;;AAiCA,eAAeR,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useField } from '../../../../hooks/useField';\nimport TextContainer from './TextContainer';\nimport Input from './Input';\n\nimport './Chat.css';\n\nconst Chat = ({ channelID, socket, messages, setMessages }) => {\n  // define emit message event\n  const message = useField('text');\n  console.log(messages)\n  const sendMessage = (e) => {\n    e.preventDefault();\n    const messageObj = {\n      message: message.value,\n      channelID,\n      authorization: window.localStorage.getItem('authorization'),\n      username: window.localStorage.getItem('username'),\n    };\n    socket.emit('message', messageObj, (data) => {\n      setMessages([...messages, data]);\n    });\n  };\n\n  socket.on('new message', (messageObj) => {\n    console.log(messageObj, channelID);\n    setMessages([...messages, messageObj]);\n  });\n\n  return (\n    <div className=\"container\">\n      <TextContainer messages={messages} />\n      <Input\n        message={message}\n        sendMessage={sendMessage}\n      />\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}