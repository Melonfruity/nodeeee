{"ast":null,"code":"import _slicedToArray from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Channel.js\";\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport Chatbox from './Container/Chat/Chatbox';\nimport ChannelList from './LeftBar/ChannelList/ChannelList';\nimport NewChannel from './NewChannel';\nimport { info } from '../../utils/logger';\nlet socket;\nconst channelData = [{\n  id: 1,\n  name: 'channel 1'\n}, {\n  id: 2,\n  name: 'channel 2'\n}, {\n  id: 3,\n  name: 'channel 3'\n}, {\n  id: 4,\n  name: 'channel 4'\n}];\n\nconst Channel = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        channels = _useState2[0],\n        setChannels = _useState2[1]; // list of user channels\n\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        channel = _useState4[0],\n        setChannel = _useState4[1]; // current channel\n\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showCreateJoin = _useState6[0],\n        setShowCreateJoin = _useState6[1];\n\n  const selectChannel = id => setChannel(channelData.filter(chn => chn.id === id)[0]);\n\n  const newChannel = () => {\n    setShowCreateJoin(prev => !prev);\n  };\n\n  useEffect(() => {\n    setChannels(channelData); // do it in initial render cause then it will connect before that...\n\n    socket = io('http://localhost:8001/channel');\n    socket.on('connect', () => {\n      // from servers\n      socket.on('serverMsg', data => {\n        info(data);\n      });\n      socket.emit('message', 'client connected', () => {\n        info('sent message to server');\n      });\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Channels\", React.createElement(ChannelList, {\n    channels: channels,\n    selectChannel: selectChannel,\n    newChannel: newChannel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Chatbox, {\n    channel: channel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), showCreateJoin ? React.createElement(NewChannel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null));\n};\n\nexport default Channel;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Channel.js"],"names":["React","useEffect","useState","io","Chatbox","ChannelList","NewChannel","info","socket","channelData","id","name","Channel","channels","setChannels","channel","setChannel","showCreateJoin","setShowCreateJoin","selectChannel","filter","chn","newChannel","prev","on","data","emit"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,SAASC,IAAT,QAAqB,oBAArB;AAEA,IAAIC,MAAJ;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADkB,EAKlB;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALkB,EASlB;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATkB,EAalB;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAbkB,CAApB;;AAmBA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACYV,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,QACbW,QADa;AAAA,QACHC,WADG,kBAC0B;;;AAD1B,qBAEUZ,QAAQ,CAAC,EAAD,CAFlB;AAAA;AAAA,QAEba,OAFa;AAAA,QAEJC,UAFI,kBAEwB;;;AAFxB,qBAIwBd,QAAQ,CAAC,KAAD,CAJhC;AAAA;AAAA,QAIbe,cAJa;AAAA,QAIGC,iBAJH;;AAMpB,QAAMC,aAAa,GAAIT,EAAD,IAAQM,UAAU,CAACP,WAAW,CAACW,MAAZ,CAAoBC,GAAD,IAASA,GAAG,CAACX,EAAJ,KAAWA,EAAvC,EAA2C,CAA3C,CAAD,CAAxC;;AAEA,QAAMY,UAAU,GAAG,MAAM;AACvBJ,IAAAA,iBAAiB,CAAEK,IAAD,IAAU,CAACA,IAAZ,CAAjB;AACD,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW,CAACL,WAAD,CAAX,CADc,CAEd;;AACAD,IAAAA,MAAM,GAAGL,EAAE,CAAC,+BAAD,CAAX;AACAK,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzB;AACAhB,MAAAA,MAAM,CAACgB,EAAP,CAAU,WAAV,EAAwBC,IAAD,IAAU;AAC/BlB,QAAAA,IAAI,CAACkB,IAAD,CAAJ;AACD,OAFD;AAIAjB,MAAAA,MAAM,CAACkB,IAAP,CAAY,SAAZ,EAAuB,kBAAvB,EAA2C,MAAM;AAC/CnB,QAAAA,IAAI,CAAC,wBAAD,CAAJ;AACD,OAFD;AAGD,KATD;AAUD,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEM,QADZ;AAEE,IAAA,aAAa,EAAEM,aAFjB;AAGE,IAAA,UAAU,EAAEG,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEP,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaIE,cAAc,GAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAoB,yCAbtC,CADF;AAiBD,CA7CD;;AA+CA,eAAeL,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport Chatbox from './Container/Chat/Chatbox';\nimport ChannelList from './LeftBar/ChannelList/ChannelList';\nimport NewChannel from './NewChannel';\n\nimport { info } from '../../utils/logger';\n\nlet socket;\n\nconst channelData = [\n  {\n    id: 1,\n    name: 'channel 1',\n  },\n  {\n    id: 2,\n    name: 'channel 2',\n  },\n  {\n    id: 3,\n    name: 'channel 3',\n  },\n  {\n    id: 4,\n    name: 'channel 4',\n  },\n];\n\nconst Channel = () => {\n  const [channels, setChannels] = useState([]); // list of user channels\n  const [channel, setChannel] = useState({}); // current channel\n\n  const [showCreateJoin, setShowCreateJoin] = useState(false);\n\n  const selectChannel = (id) => setChannel(channelData.filter((chn) => chn.id === id)[0]);\n\n  const newChannel = () => {\n    setShowCreateJoin((prev) => !prev);\n  };\n\n  useEffect(() => {\n    setChannels(channelData);\n    // do it in initial render cause then it will connect before that...\n    socket = io('http://localhost:8001/channel');\n    socket.on('connect', () => {\n      // from servers\n      socket.on('serverMsg', (data) => {\n        info(data);\n      });\n\n      socket.emit('message', 'client connected', () => {\n        info('sent message to server');\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      Channels\n      <ChannelList\n        channels={channels}\n        selectChannel={selectChannel}\n        newChannel={newChannel}\n      />\n      <Chatbox\n        channel={channel}\n      />\n      {\n        // change this later as a popup\n      }\n      { showCreateJoin ? <NewChannel /> : <></>}\n    </div>\n  );\n};\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}