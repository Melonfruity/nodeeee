{"ast":null,"code":"var _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Chat.js\";\nimport React, { useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Chatbox from './Chatbox';\nimport { useField } from '../../../../hooks/useField';\nlet socket;\n\nconst Chat = ({\n  channel\n}) => {\n  // define emit message event\n  const message = useField('text');\n\n  const sendMessage = e => {\n    // e.preventDefault();\n    console.log(message.value);\n  }; // useEffect(() => {\n  //   // do it in initial render cause then it will connect before that...\n  //   socket = io('http://localhost:8001/channel');\n  //   // join that channel (room)\n  //   socket.on('connect', () => {\n  //     // from servers\n  //     socket.on('server message', (data) => {\n  //       console.log(data);\n  //     });\n  //     socket.emit('message', 'client connected', () => {\n  //       console.log('sent message to server');\n  //     });\n  //   });\n  //   return () => {\n  //     socket.off();\n  //   };\n  // }, []);\n\n\n  return React.createElement(React.Fragment, null, React.createElement(Chatbox, {\n    message: message,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Chat.js"],"names":["React","useEffect","io","Chatbox","useField","socket","Chat","channel","message","sendMessage","e","console","log","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC5B;AACA,QAAMC,OAAO,GAAGJ,QAAQ,CAAC,MAAD,CAAxB;;AAEA,QAAMK,WAAW,GAAIC,CAAD,IAAO;AACzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,KAApB;AACD,GAHD,CAJ4B,CAS5B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,SACE,0CACE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEL,OADX;AAEE,IAAA,WAAW,EAAEC,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAQD,CAtCD;;AAwCA,eAAeH,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Chatbox from './Chatbox';\n\nimport { useField } from '../../../../hooks/useField';\n\nlet socket;\n\nconst Chat = ({ channel }) => {\n  // define emit message event\n  const message = useField('text');\n\n  const sendMessage = (e) => {\n    // e.preventDefault();\n    console.log(message.value);\n  };\n\n  // useEffect(() => {\n  //   // do it in initial render cause then it will connect before that...\n  //   socket = io('http://localhost:8001/channel');\n  //   // join that channel (room)\n\n  //   socket.on('connect', () => {\n  //     // from servers\n  //     socket.on('server message', (data) => {\n  //       console.log(data);\n  //     });\n\n  //     socket.emit('message', 'client connected', () => {\n  //       console.log('sent message to server');\n  //     });\n  //   });\n\n  //   return () => {\n  //     socket.off();\n  //   };\n  // }, []);\n\n  return (\n    <>\n      <Chatbox\n        message={message}\n        sendMessage={sendMessage}\n      />\n    </>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}