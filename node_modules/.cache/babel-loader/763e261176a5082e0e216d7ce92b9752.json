{"ast":null,"code":"import _objectSpread from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport auth from './service/authService';\nimport channelService from './service/channelService'; // import Channel from './components/Channel/Channel';\n\nconst socket = io('http://localhost:8001/');\n\nconst App = () => {\n  const _useState = useState({\n    selectedChannel: '',\n    channelStates: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      // from servers\n      socket.on('server message', data => {\n        console.log(data);\n      });\n      const joinChannelsObj = {\n        authorization: window.localStorage.getItem('authorization'),\n        username: window.localStorage.getItem('username')\n      };\n      console.log(joinChannelsObj);\n      socket.emit('join channels', joinChannelsObj, data => {\n        console.log(data);\n      });\n    });\n  }, []); // handle initial state\n\n  useEffect(() => {\n    // temp login / set user\n    auth.login({\n      email: 'email@gmail.com',\n      password: 'password'\n    }); // grab all channel data, messages\n\n    channelService.getUserData().then(({\n      channelData\n    }) => {\n      const channelStates = channelData.reduce((obj, ele) => {\n        if (!obj[ele.data.channel]) {\n          // eslint-disable-next-line no-param-reassign\n          obj[ele.data.channel] = {\n            users: ele.data.users,\n            name: ele.data.name,\n            messages: ele.messages\n          };\n        }\n\n        return obj;\n      }, {});\n      setState(prev => _objectSpread({}, prev, {\n        channelStates\n      }));\n    });\n  }, []);\n  console.log(state);\n  const channels = Object.keys(state.channelStates);\n  console.log(channels);\n\n  const sendMessage = (e, message, channelID) => {\n    e.preventDefault();\n    const messageObj = {\n      message,\n      channelID,\n      authorization: window.localStorage.getItem('authorization'),\n      username: window.localStorage.getItem('username')\n    };\n    socket.emit('message', messageObj, data => {\n      console.log(data);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Route","Link","io","auth","channelService","socket","App","selectedChannel","channelStates","state","setState","on","data","console","log","joinChannelsObj","authorization","window","localStorage","getItem","username","emit","login","email","password","getUserData","then","channelData","reduce","obj","ele","channel","users","name","messages","prev","channels","Object","keys","sendMessage","e","message","channelID","preventDefault","messageObj"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport io from 'socket.io-client';\nimport auth from './service/authService';\nimport channelService from './service/channelService';\n\n// import Channel from './components/Channel/Channel';\n\nconst socket = io('http://localhost:8001/');\n\nconst App = () => {\n\n  const [state, setState] = useState({\n    selectedChannel: '',\n    channelStates: {},\n  });\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      // from servers\n      socket.on('server message', (data) => {\n        console.log(data);\n      });\n\n      const joinChannelsObj = {\n        authorization: window.localStorage.getItem('authorization'),\n        username: window.localStorage.getItem('username'),\n      };\n      console.log(joinChannelsObj);\n      socket.emit('join channels', joinChannelsObj, (data) => {\n        console.log(data);\n      });\n    });\n  }, []);\n\n  // handle initial state\n  useEffect(() => {\n    // temp login / set user\n    auth.login({\n      email: 'email@gmail.com',\n      password: 'password',\n    });\n\n    // grab all channel data, messages\n    channelService\n      .getUserData()\n      .then(({ channelData }) => {\n        const channelStates = channelData.reduce((obj, ele) => {\n          if (!obj[ele.data.channel]) {\n            // eslint-disable-next-line no-param-reassign\n            obj[ele.data.channel] = {\n              users: ele.data.users,\n              name: ele.data.name,\n              messages: ele.messages,\n            };\n          }\n          return obj;\n        }, {});\n        setState((prev) => ({ ...prev, channelStates }));\n      });\n  }, []);\n\n  console.log(state);\n\n  const channels = Object.keys(state.channelStates);\n  console.log(channels)\n  const sendMessage = (e, message, channelID) => {\n    e.preventDefault();\n    const messageObj = {\n      message,\n      channelID,\n      authorization: window.localStorage.getItem('authorization'),\n      username: window.localStorage.getItem('username'),\n    };\n    socket.emit('message', messageObj, (data) => {\n      console.log(data);\n    });\n  };\n\n  return (\n    <div>\n\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}