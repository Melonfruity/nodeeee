{"ast":null,"code":"import _slicedToArray from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Chatbox.js\";\n\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport Input from './Input';\nimport TextContainer from './TextContainer';\nimport useField from '../../../../hooks/useField';\nimport { info } from '../../../../utils/logger';\nconst db = [{\n  channel_id: 1,\n  messages: [{\n    text: 'sdsadas',\n    id: '1'\n  }, {\n    text: 'sdsad231as',\n    id: '2'\n  }, {\n    text: 'sdsada321312s',\n    id: '3'\n  }]\n}, {\n  channel_id: 2,\n  messages: [{\n    text: 'sdsa3432432432423432das',\n    id: '1'\n  }, {\n    text: 'sdsad231a32423432423432432s',\n    id: '2'\n  }, {\n    text: 'sdsada32131232423432432423432s',\n    id: '3'\n  }]\n}];\n\nconst Chatbox = ({\n  channel\n}) => {\n  const message = useField('text');\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1];\n\n  const sendMessage = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n  };\n\n  useEffect(() => {\n    const channelMessages = db.filter(msgs => msgs.channel_id === channel.id);\n\n    if (channelMessages[0]) {\n      setMessages(channelMessages[0].messages);\n    }\n  }, [channel]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TextContainer, {\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n};\n\nexport default Chatbox;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Chatbox.js"],"names":["React","useState","useEffect","Input","TextContainer","useField","info","db","channel_id","messages","text","id","Chatbox","channel","message","setMessages","sendMessage","e","preventDefault","console","log","target","value","channelMessages","filter","msgs"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,IAAT,QAAqB,0BAArB;AAEA,MAAMC,EAAE,GAAG,CACT;AACEC,EAAAA,UAAU,EAAE,CADd;AAEEC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GADQ,EAKR;AACED,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GALQ,EASR;AACED,IAAAA,IAAI,EAAE,eADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GATQ;AAFZ,CADS,EAkBT;AACEH,EAAAA,UAAU,EAAE,CADd;AAEEC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,IAAI,EAAE,yBADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GADQ,EAKR;AACED,IAAAA,IAAI,EAAE,6BADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GALQ,EASR;AACED,IAAAA,IAAI,EAAE,gCADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GATQ;AAFZ,CAlBS,CAAX;;AAqCA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC/B,QAAMC,OAAO,GAAGT,QAAQ,CAAC,MAAD,CAAxB;;AAD+B,oBAECJ,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,QAExBQ,QAFwB;AAAA,QAEdM,WAFc;;AAI/B,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;AACD,GAHD;;AAKApB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,eAAe,GAAGhB,EAAE,CAACiB,MAAH,CAAWC,IAAD,IAAUA,IAAI,CAACjB,UAAL,KAAoBK,OAAO,CAACF,EAAhD,CAAxB;;AACA,QAAIY,eAAe,CAAC,CAAD,CAAnB,EAAwB;AACtBR,MAAAA,WAAW,CAACQ,eAAe,CAAC,CAAD,CAAf,CAAmBd,QAApB,CAAX;AACD;AACF,GALQ,EAKN,CAACI,OAAD,CALM,CAAT;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEK,OADX;AAEE,IAAA,WAAW,EAAEE,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAWD,CA3BD;;AA6BA,eAAeJ,OAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport Input from './Input';\nimport TextContainer from './TextContainer';\n\nimport useField from '../../../../hooks/useField';\nimport { info } from '../../../../utils/logger';\n\nconst db = [\n  {\n    channel_id: 1,\n    messages: [\n      {\n        text: 'sdsadas',\n        id: '1',\n      },\n      {\n        text: 'sdsad231as',\n        id: '2',\n      },\n      {\n        text: 'sdsada321312s',\n        id: '3',\n      },\n    ],\n  },\n  {\n    channel_id: 2,\n    messages: [\n      {\n        text: 'sdsa3432432432423432das',\n        id: '1',\n      },\n      {\n        text: 'sdsad231a32423432423432432s',\n        id: '2',\n      },\n      {\n        text: 'sdsada32131232423432432423432s',\n        id: '3',\n      },\n    ],\n  },\n];\n\nconst Chatbox = ({ channel }) => {\n  const message = useField('text');\n  const [messages, setMessages] = useState([]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n  };\n\n  useEffect(() => {\n    const channelMessages = db.filter((msgs) => msgs.channel_id === channel.id);\n    if (channelMessages[0]) {\n      setMessages(channelMessages[0].messages);\n    }\n  }, [channel]);\n\n  return (\n    <div>\n      <TextContainer\n        messages={messages}\n      />\n      <Input\n        message={message}\n        sendMessage={sendMessage}\n      />\n    </div>\n  );\n};\n\nexport default Chatbox;\n"]},"metadata":{},"sourceType":"module"}