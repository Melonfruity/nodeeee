{"ast":null,"code":"import _slicedToArray from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Message.js\";\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport ReactEmoji from 'react-emoji';\n\nconst Message = ({\n  id,\n  username,\n  message,\n  created,\n  emitDeleteMessage\n}) => {\n  // implement delete, edit, emoji\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        confirm = _useState2[0],\n        setConfirm = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        edit = _useState4[0],\n        setEdit = _useState4[1];\n\n  const deleteMessage = () => {\n    // setConfirm(false);\n    console.log('delete it');\n    setConfirm(false);\n  };\n\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    readOnly: !edit,\n    defaultValue: `${username}: ${ReactEmoji.emojify(message)} <created: ${created}>`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), confirm || edit ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: deleteMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" confirm \"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setConfirm(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" cancel \")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setConfirm(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" delete \"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" edit \"), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" emoji \"))));\n};\n\nexport default Message;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/components/Channel/Container/Chat/Message.js"],"names":["React","useState","ReactEmoji","Message","id","username","message","created","emitDeleteMessage","confirm","setConfirm","edit","setEdit","deleteMessage","console","log","emojify"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,EADe;AACXC,EAAAA,QADW;AACDC,EAAAA,OADC;AACQC,EAAAA,OADR;AACiBC,EAAAA;AADjB,CAAD,KAEV;AACJ;AADI,oBAE0BP,QAAQ,CAAC,KAAD,CAFlC;AAAA;AAAA,QAEGQ,OAFH;AAAA,QAEYC,UAFZ;;AAAA,qBAGoBT,QAAQ,CAAC,KAAD,CAH5B;AAAA;AAAA,QAGGU,IAHH;AAAA,QAGSC,OAHT;;AAKJ,QAAMC,aAAa,GAAG,MAAM;AAC1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAL,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,QAAQ,EAAE,CAACC,IAArB;AAA2B,IAAA,YAAY,EAAG,GAAEN,QAAS,KAAIH,UAAU,CAACc,OAAX,CAAmBV,OAAnB,CAA4B,cAAaC,OAAQ,GAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEIE,OAAO,IAAIE,IAAX,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEE,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMH,UAAU,CAAC,KAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADA,GAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMA,UAAU,CAAC,IAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CARJ,CADF,CADF;AAmBD,CAhCD;;AAkCA,eAAeP,OAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport ReactEmoji from 'react-emoji';\n\nconst Message = ({\n  id, username, message, created, emitDeleteMessage,\n}) => {\n  // implement delete, edit, emoji\n  const [confirm, setConfirm] = useState(false);\n  const [edit, setEdit] = useState(false);\n\n  const deleteMessage = () => {\n    // setConfirm(false);\n    console.log('delete it');\n    setConfirm(false);\n  };\n\n  return (\n    <section>\n      <article>\n        <textarea readOnly={!edit} defaultValue={`${username}: ${ReactEmoji.emojify(message)} <created: ${created}>`} />\n        { confirm || edit ? (\n          <div>\n            <button type=\"button\" onClick={deleteMessage}> confirm </button>\n            <button type=\"button\" onClick={() => setConfirm(false)}> cancel </button>\n          </div>\n        ) : (\n          <div>\n            <button type=\"button\" onClick={() => setConfirm(true)}> delete </button>\n            <button type=\"button\"> edit </button>\n            <button type=\"button\"> emoji </button>\n          </div>\n        )}\n      </article>\n    </section>\n  );\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}