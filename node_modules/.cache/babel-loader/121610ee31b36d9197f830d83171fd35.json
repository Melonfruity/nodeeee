{"ast":null,"code":"import _slicedToArray from \"/home/hei/Documents/finals/JEK/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hei/Documents/finals/JEK/client/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport auth from './service/authService';\nimport channelService from './service/channelService';\nconst Channel = React.lazy(() => import('./components/Channel/Channel'));\nconst socket = io('http://localhost:8001/');\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        channels = _useState2[0],\n        setChannels = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        channelMembers = _useState4[0],\n        setChannelMembers = _useState4[1];\n\n  useEffect(() => {\n    auth.login({\n      email: 'email@gmail.com',\n      password: 'password'\n    });\n    channelService.getMessages().then(({\n      members,\n      messages\n    }) => {\n      console.log(messages);\n      setChannels([...messages]);\n      setChannelMembers([...members]);\n    });\n    console.log(socket);\n    socket.on('connect', () => {\n      // from servers\n      socket.on('server message', data => {\n        console.log(data);\n      });\n      const joinChannelsObj = {\n        authorization: window.localStorage.getItem('authorization'),\n        username: window.localStorage.getItem('username')\n      };\n      console.log(joinChannelsObj);\n      socket.emit('join channels', joinChannelsObj, data => {\n        console.log(data);\n      });\n    });\n  }, []);\n  console.log(channelMembers);\n  const channelViews = channels.map(({\n    channel,\n    messages\n  }) => React.createElement(Channel, {\n    key: channel,\n    socket: socket,\n    channel: channel,\n    messages: messages,\n    members: setChannelMembers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n  return React.createElement(React.Suspense, {\n    fallback: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Loading...\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, channelViews);\n};\n\nexport default App;","map":{"version":3,"sources":["/home/hei/Documents/finals/JEK/client/src/App.js"],"names":["React","useEffect","useState","io","auth","channelService","Channel","lazy","socket","App","channels","setChannels","channelMembers","setChannelMembers","login","email","password","getMessages","then","members","messages","console","log","on","data","joinChannelsObj","authorization","window","localStorage","getItem","username","emit","channelViews","map","channel"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,MAAMC,OAAO,GAAGN,KAAK,CAACO,IAAN,CAAW,MAAM,OAAO,8BAAP,CAAjB,CAAhB;AAEA,MAAMC,MAAM,GAAGL,EAAE,CAAC,wBAAD,CAAjB;;AAEA,MAAMM,GAAG,GAAG,MAAM;AAAA,oBACgBP,QAAQ,CAAC,EAAD,CADxB;AAAA;AAAA,QACTQ,QADS;AAAA,QACCC,WADD;;AAAA,qBAE4BT,QAAQ,CAAC,EAAD,CAFpC;AAAA;AAAA,QAETU,cAFS;AAAA,QAEOC,iBAFP;;AAGhBZ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,IAAI,CAACU,KAAL,CAAW;AACTC,MAAAA,KAAK,EAAE,iBADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAX;AAKAX,IAAAA,cAAc,CACXY,WADH,GAEGC,IAFH,CAEQ,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,KAA2B;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAT,MAAAA,WAAW,CAAC,CAAC,GAAGS,QAAJ,CAAD,CAAX;AACAP,MAAAA,iBAAiB,CAAC,CAAC,GAAGM,OAAJ,CAAD,CAAjB;AACD,KANH;AAOAE,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACAA,IAAAA,MAAM,CAACe,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzB;AACAf,MAAAA,MAAM,CAACe,EAAP,CAAU,gBAAV,EAA6BC,IAAD,IAAU;AACpCH,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD,OAFD;AAIA,YAAMC,eAAe,GAAG;AACtBC,QAAAA,aAAa,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,eAA5B,CADO;AAEtBC,QAAAA,QAAQ,EAAEH,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B;AAFY,OAAxB;AAIAR,MAAAA,OAAO,CAACC,GAAR,CAAYG,eAAZ;AACAjB,MAAAA,MAAM,CAACuB,IAAP,CAAY,eAAZ,EAA6BN,eAA7B,EAA+CD,IAAD,IAAU;AACtDH,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD,OAFD;AAGD,KAdD;AAeD,GA7BQ,EA6BN,EA7BM,CAAT;AAgCAH,EAAAA,OAAO,CAACC,GAAR,CAAYV,cAAZ;AACA,QAAMoB,YAAY,GAAGtB,QAAQ,CAACuB,GAAT,CAAa,CAAC;AAAEC,IAAAA,OAAF;AAAWd,IAAAA;AAAX,GAAD,KAChC,oBAAC,OAAD;AACE,IAAA,GAAG,EAAEc,OADP;AAEE,IAAA,MAAM,EAAE1B,MAFV;AAGE,IAAA,OAAO,EAAE0B,OAHX;AAIE,IAAA,QAAQ,EAAEd,QAJZ;AAKE,IAAA,OAAO,EAAEP,iBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADmB,CAArB;AAUA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmB,YADH,CADF;AAKD,CAnDD;;AAqDA,eAAevB,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport auth from './service/authService';\nimport channelService from './service/channelService';\n\nconst Channel = React.lazy(() => import('./components/Channel/Channel'));\n\nconst socket = io('http://localhost:8001/');\n\nconst App = () => {\n  const [channels, setChannels] = useState([]);\n  const [channelMembers, setChannelMembers] = useState([]);\n  useEffect(() => {\n    auth.login({\n      email: 'email@gmail.com',\n      password: 'password',\n    });\n\n    channelService\n      .getMessages()\n      .then(({ members, messages }) => {\n        console.log(messages);\n        setChannels([...messages]);\n        setChannelMembers([...members]);\n      });\n    console.log(socket);\n    socket.on('connect', () => {\n      // from servers\n      socket.on('server message', (data) => {\n        console.log(data);\n      });\n\n      const joinChannelsObj = {\n        authorization: window.localStorage.getItem('authorization'),\n        username: window.localStorage.getItem('username'),\n      };\n      console.log(joinChannelsObj)\n      socket.emit('join channels', joinChannelsObj, (data) => {\n        console.log(data);\n      });\n    });\n  }, []);\n\n\n  console.log(channelMembers);\n  const channelViews = channels.map(({ channel, messages }) => (\n    <Channel\n      key={channel}\n      socket={socket}\n      channel={channel}\n      messages={messages}\n      members={setChannelMembers}\n    />\n  ));\n\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      {channelViews}\n    </React.Suspense>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}